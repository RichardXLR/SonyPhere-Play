/*
 * Copyright (C) 2025 SonsPhere Project
 *
 * SPDX-License-Identifier: GPL-3.0
 */

package com.richard.musicplayer.ui.screens.settings

import androidx.compose.foundation.layout.*
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.automirrored.rounded.ArrowBack
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import androidx.navigation.NavController
import com.richard.musicplayer.LocalPlayerAwareWindowInsets
import com.richard.musicplayer.ui.component.IconButton
import com.richard.musicplayer.ui.utils.backToMain

@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun PrivacyPolicyScreen(
    navController: NavController,
    scrollBehavior: TopAppBarScrollBehavior,
) {
    Column(
        modifier = Modifier
            .fillMaxSize()
            .windowInsetsPadding(LocalPlayerAwareWindowInsets.current)
    ) {
        TopAppBar(
            title = { 
                Text(
                    "üîê Pol√≠tica de Privacidade",
                    style = MaterialTheme.typography.headlineSmall.copy(
                        fontWeight = FontWeight.Bold
                    )
                )
            },
            navigationIcon = {
                IconButton(
                    onClick = navController::backToMain
                ) {
                    Icon(
                        Icons.AutoMirrored.Rounded.ArrowBack,
                        contentDescription = "Voltar"
                    )
                }
            },
            scrollBehavior = scrollBehavior
        )

        LazyColumn(
            modifier = Modifier.fillMaxSize(),
            contentPadding = PaddingValues(16.dp),
            verticalArrangement = Arrangement.spacedBy(16.dp)
        ) {
            item {
                PolicyCard(
                    title = "Compromisso com Sua Privacidade",
                    emoji = "üõ°Ô∏è"
                ) {
                    Text(
                        "No SonsPhere, sua privacidade √© nossa prioridade m√°xima. Desenvolvemos nossa plataforma musical com foco absoluto na prote√ß√£o dos seus dados pessoais e experi√™ncia musical.",
                        style = MaterialTheme.typography.bodyLarge,
                        lineHeight = 24.sp
                    )
                }
            }

            item {
                PolicyCard(
                    title = "Coleta de Dados",
                    emoji = "üìä"
                ) {
                    Column(verticalArrangement = Arrangement.spacedBy(8.dp)) {
                        Text(
                            "Coletamos apenas informa√ß√µes essenciais para fornecer nossa experi√™ncia musical:",
                            style = MaterialTheme.typography.bodyMedium.copy(fontWeight = FontWeight.Medium)
                        )
                        
                        PolicyBulletPoint("Prefer√™ncias musicais e configura√ß√µes do app")
                        PolicyBulletPoint("Hist√≥rico de reprodu√ß√£o (armazenado localmente)")
                        PolicyBulletPoint("Configura√ß√µes de interface e personaliza√ß√£o")
                        PolicyBulletPoint("Dados t√©cnicos para melhorar performance")
                    }
                }
            }

            item {
                PolicyCard(
                    title = "Uso das Informa√ß√µes",
                    emoji = "üéØ"
                ) {
                    Column(verticalArrangement = Arrangement.spacedBy(8.dp)) {
                        Text(
                            "Utilizamos seus dados exclusivamente para:",
                            style = MaterialTheme.typography.bodyMedium.copy(fontWeight = FontWeight.Medium)
                        )
                        
                        PolicyBulletPoint("Personalizar sua experi√™ncia musical")
                        PolicyBulletPoint("Melhorar algoritmos de recomenda√ß√£o")
                        PolicyBulletPoint("Otimizar performance do aplicativo")
                        PolicyBulletPoint("Fornecer suporte t√©cnico quando necess√°rio")
                        
                        Text(
                            "‚ùå Jamais vendemos, alugamos ou compartilhamos seus dados com terceiros.",
                            style = MaterialTheme.typography.bodyMedium.copy(
                                fontWeight = FontWeight.Bold,
                                color = MaterialTheme.colorScheme.error
                            )
                        )
                    }
                }
            }

            item {
                PolicyCard(
                    title = "Armazenamento e Seguran√ßa",
                    emoji = "üîí"
                ) {
                    Column(verticalArrangement = Arrangement.spacedBy(8.dp)) {
                        PolicyBulletPoint("Dados armazenados localmente no seu dispositivo")
                        PolicyBulletPoint("Criptografia de ponta a ponta para dados sens√≠veis")
                        PolicyBulletPoint("Backup seguro opcional na nuvem")
                        PolicyBulletPoint("Acesso restrito apenas ao necess√°rio")
                        PolicyBulletPoint("Exclus√£o autom√°tica de dados tempor√°rios")
                    }
                }
            }

            item {
                PolicyCard(
                    title = "Seus Direitos",
                    emoji = "‚öñÔ∏è"
                ) {
                    Column(verticalArrangement = Arrangement.spacedBy(8.dp)) {
                        Text(
                            "De acordo com a LGPD e regulamenta√ß√µes internacionais, voc√™ tem direito a:",
                            style = MaterialTheme.typography.bodyMedium.copy(fontWeight = FontWeight.Medium)
                        )
                        
                        PolicyBulletPoint("Acessar todos os seus dados coletados")
                        PolicyBulletPoint("Corrigir informa√ß√µes incorretas")
                        PolicyBulletPoint("Solicitar exclus√£o completa dos dados")
                        PolicyBulletPoint("Portabilidade para outros servi√ßos")
                        PolicyBulletPoint("Revogar consentimentos a qualquer momento")
                    }
                }
            }

            item {
                PolicyCard(
                    title = "Cookies e Tecnologias",
                    emoji = "üç™"
                ) {
                    Column(verticalArrangement = Arrangement.spacedBy(8.dp)) {
                        Text(
                            "Utilizamos tecnologias para melhorar sua experi√™ncia:",
                            style = MaterialTheme.typography.bodyMedium.copy(fontWeight = FontWeight.Medium)
                        )
                        
                        PolicyBulletPoint("Prefer√™ncias de interface (tema, idioma)")
                        PolicyBulletPoint("Cache de m√∫sicas para reprodu√ß√£o offline")
                        PolicyBulletPoint("Estat√≠sticas de uso agregadas e an√¥nimas")
                        PolicyBulletPoint("Otimiza√ß√£o de performance do app")
                    }
                }
            }

            item {
                PolicyCard(
                    title = "Menores de Idade",
                    emoji = "üë∂"
                ) {
                    Text(
                        "O SonsPhere √© adequado para todas as idades. Para usu√°rios menores de 13 anos, requeremos consentimento parental expl√≠cito. Implementamos prote√ß√µes especiais para garantir seguran√ßa de crian√ßas e adolescentes.",
                        style = MaterialTheme.typography.bodyMedium,
                        lineHeight = 22.sp
                    )
                }
            }

            item {
                PolicyCard(
                    title = "Altera√ß√µes na Pol√≠tica",
                    emoji = "üìù"
                ) {
                    Text(
                        "Qualquer altera√ß√£o nesta pol√≠tica ser√° comunicada atrav√©s do aplicativo com 30 dias de anteced√™ncia. Mudan√ßas significativas requerem seu consentimento expl√≠cito.",
                        style = MaterialTheme.typography.bodyMedium,
                        lineHeight = 22.sp
                    )
                }
            }

            item {
                PolicyCard(
                    title = "Contato e Suporte",
                    emoji = "üìû"
                ) {
                    Column(verticalArrangement = Arrangement.spacedBy(8.dp)) {
                        Text(
                            "Para quest√µes sobre privacidade, entre em contato:",
                            style = MaterialTheme.typography.bodyMedium.copy(fontWeight = FontWeight.Medium)
                        )
                        
                        Text(
                            "üìß Email: richardsilva.devx@gmail.com",
                            style = MaterialTheme.typography.bodyMedium,
                            color = MaterialTheme.colorScheme.primary
                        )
                        
                        Text(
                            "üí¨ WhatsApp: Suporte 24/7",
                            style = MaterialTheme.typography.bodyMedium,
                            color = MaterialTheme.colorScheme.primary
                        )
                        
                        Text(
                            "‚è±Ô∏è Tempo de resposta: At√© 24 horas",
                            style = MaterialTheme.typography.bodySmall,
                            color = MaterialTheme.colorScheme.onSurfaceVariant
                        )
                    }
                }
            }

            item {
                Card(
                    modifier = Modifier.fillMaxWidth(),
                    shape = RoundedCornerShape(16.dp),
                    colors = CardDefaults.cardColors(
                        containerColor = MaterialTheme.colorScheme.primaryContainer.copy(alpha = 0.3f)
                    )
                ) {
                    Column(
                        modifier = Modifier.padding(20.dp),
                        verticalArrangement = Arrangement.spacedBy(8.dp)
                    ) {
                        Text(
                            "‚ú® √öltima Atualiza√ß√£o",
                            style = MaterialTheme.typography.titleMedium.copy(
                                fontWeight = FontWeight.Bold
                            )
                        )
                        Text(
                            "Esta pol√≠tica foi atualizada em Janeiro de 2025",
                            style = MaterialTheme.typography.bodyMedium
                        )
                        Text(
                            "Vers√£o 1.0 - SonsPhere",
                            style = MaterialTheme.typography.bodySmall,
                            color = MaterialTheme.colorScheme.onSurfaceVariant
                        )
                    }
                }
            }

            item { Spacer(modifier = Modifier.height(32.dp)) }
        }
    }
}

@Composable
private fun PolicyCard(
    title: String,
    emoji: String,
    content: @Composable () -> Unit
) {
    Card(
        modifier = Modifier.fillMaxWidth(),
        shape = RoundedCornerShape(16.dp),
        colors = CardDefaults.cardColors(
            containerColor = MaterialTheme.colorScheme.surface
        )
    ) {
        Column(
            modifier = Modifier.padding(20.dp),
            verticalArrangement = Arrangement.spacedBy(12.dp)
        ) {
            Row {
                Text(
                    text = emoji,
                    fontSize = 24.sp
                )
                Spacer(modifier = Modifier.width(12.dp))
                Text(
                    text = title,
                    style = MaterialTheme.typography.titleLarge.copy(
                        fontWeight = FontWeight.Bold
                    )
                )
            }
            content()
        }
    }
}

@Composable
private fun PolicyBulletPoint(text: String) {
    Row {
        Text(
            text = "‚Ä¢ ",
            style = MaterialTheme.typography.bodyMedium,
            color = MaterialTheme.colorScheme.primary
        )
        Text(
            text = text,
            style = MaterialTheme.typography.bodyMedium,
            modifier = Modifier.weight(1f)
        )
    }
} 